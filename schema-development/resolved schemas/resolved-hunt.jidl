     package:  "https://praxiseng.com/threat-hunter-9001"
     version:  "0-wd01"
       title:  "Threat Hunting Profile"
 description:  "Data definitions for Threat Hunting (TH) functions"
     exports:  ["OpenC2-Command", "OpenC2-Response", "SCO"]
      config:  {"$MaxBinary": 5555, "$MaxString": 5555, "$MaxElements": 555, "$Sys": "$", "$TypeName": "^[A-Za-z][-:_A-Za-z0-9]{0,63}$", "$FieldName": "^[A-Za-z][-:_A-Za-z0-9]{0,63}$", "$NSID": "^[A-Za-z][A-Za-z0-9]{0,7}$"}

OpenC2-Command = Record                 // The Command defines an Action to be performed on a Target
    1  action      Action               // The task or activity to be performed (i.e., the 'verb').
    2  target      Target               // The object of the Action. The Action is performed on the Target.
    3  args        Args optional        // Additional information that applies to the Command.
    4  actuator    Actuator optional    // The subject of the Action. The Actuator executes the Action on the Target.
    5  command_id  Command-ID optional  // An identifier of this Command.

OpenC2-Response = Map{1..*}
    1  status       Status-Code       // An integer status code
    2  status_text  String optional   // A free-form human-readable description of the Response status
    3  results      Results optional  // Map of key:value pairs that contain additional results based on the invoking Command.

Action = Enumerated
    3  query        // Initiate a request for information.
   30  investigate  // Task the recipient to aggregate and report information as it pertains to a security event or incident.

Target = Choice
    9  features  Features   // A set of items used with the query Action to determine an Actuator's capabilities.
 1036  th/       AP-Target  // Threat Hunting Profile-defined targets

Args = Map{1..*}
    1  start_time          Date-Time optional
    2  stop_time           Date-Time optional
    3  duration            Duration optional
    4  response_requested  Response-Type optional
 1036  th                  AP-Args optional

Actuator = Choice
 1036  th/  AP-Specifiers  // TH-defined actuator specifiers

Results = Map{1..*}                             // Response Results
    1  versions    Results$Versions optional    // List of OpenC2 language versions supported by this Actuator
    2  profiles    Results$Profiles optional    // List of profiles supported by this Actuator
    3  pairs       Pairs optional               // Targets applicable to each supported Action
    4  rate_limit  Results$Rate-limit optional  // Maximum number of requests per minute supported by design or policy
    5  args        Results$Args optional
 1036  th/         AP-Results optional          // TH-defined results

Pairs = Enumerated
    3  query: features, /huntflows, /datasources  //
   30  investigate: /hunt                         //

AP-Target = Choice                       // TH targets defined in this profile.
    1  hunt         String               // A procedure to find a set of entities in the monitored environment that associates with a cyberthreat.
    2  huntflows    Huntflow-Specifiers  // TH Huntflow specifiers.
    3  datasources  String optional

AP-Args = Map              // TH command arguments defined in this profile.
    1  huntargs  Huntargs  // Arguments for use in conjunction with huntflow implementation.

Huntargs = Record{1..*}                                          // TH command arguments defined in this profile.
    1  string_args      Huntargs$String-args optional            // string arguments supplied as huntargs.
    2  integer_args     Huntargs$Integer-args optional           // integer arguments supplied as huntargs.
    3  typed_args       Typed-Arguments optional                 // Paired strings of named arguments.
    4  native_oc2       OC2-Data optional                        // OC2 Language types supplied as huntargs.
    5  stix             STIX-Cybersecurity-Observables optional  // STIX arguments supplied as huntargs.
    6  stix_extensions  String optional                          // OCA Extended STIX arguments supplied as huntargs. add a custom stix for oca-asset and event
    7  timeranges       Timeranges optional                      // Timeranges used in the execution of a hunt.
    8  datasources      Datasource-Array optional                // Available data sources for hunting. These may be a host monitor, an EDR, a SIEM, a firewall, etc.

OC2-Data = ArrayOf(Language-Spec-Types){1..*}  // OC2-Data is an array of one or more types defined in the OpenC2 language spec

Language-Spec-Types = Record                        // for each track there's a file with the audio and a metadata record
    1  artifact           Artifact optional         // An array of bytes representing a file-like object or a link to that object.
    2  device             Device optional           // The properties of a hardware device.
    3  domain_name        Domain-Name optional      // A network domain name.
    4  email-address      Email-Addr optional       // A single email address
    5  file               File optional             // Properties of a file.
    6  hashes             Hashes optional           // Not used as an entity; use inside File or other attribute of another type. May be used as a query value.
    7  hostname           Hostname optional         // Value must be a hostname as defined in [RFC1034], Section 3.1
    8  idn_domain_name    IDN-Domain-Name optional  // An internationalized domain name.
    9  idn_email_address  IDN-Email-Addr optional   // A single internationalized email address.
   10  ipv4_address       IPv4-Addr optional        // IPv4 address as defined in [RFC0791].
   11  ipv6_address       IPv6-Addr optional        // IPv6 address as defined in [RFC8200].
   12  ipv4_network       IPv4-Net optional         // IPv4 network targeted by hunt activity.
   13  ipv6_network       IPv6-Net optional         // IPv6 network targeted by hunt activity.
   14  ipv4_connection    IPv4-Connection optional  // A 5-tuple of source and destination IPv4 address ranges, source and destination ports, and protocol.
   15  ipv6_connection    IPv6-Connection optional  // A 5-tuple of source and destination IPv6 address ranges, source and destination ports, and protocol.
   16  iri                IRI optional              // An internationalized resource identifier (IRI).
   17  mac_address        MAC-Addr optional         // A Media Access Control (MAC) address - EUI-48 or EUI-64 as defined in [EUI].
   18  port               Port optional             // Transport Protocol Port Number, [RFC6335]
   19  process            Process optional          // Common properties of an instance of a computer program as executed on an operating system.
   20  uri                URI optional              // A uniform resource identifier (URI).

Artifact = Record{1..*}
    1  mime_type  String optional   // Permitted values specified in the IANA Media Types registry, [[RFC6838]](#rfc6838)
    2  payload    Payload optional  // Choice of literal content or URL
    3  hashes     Hashes optional   // Hashes of the payload content

Device = Map{1..*}
    1  hostname      Hostname optional      // A hostname that can be used to connect to this device over a network
    2  idn_hostname  IDN-Hostname optional  // An internationalized hostname that can be used to connect to this device over a network
    3  device_id     String optional        // An identifier that refers to this device within an inventory or management system

Domain-Name = String /hostname  // [[RFC1034]](#rfc1034), Section 3.5

Email-Addr = String /email  // Email address, [[RFC5322]](#rfc5322), Section 3.4.1

File = Map{1..*}
    1  name    String optional  // The name of the file as defined in the file system
    2  path    String optional  // The absolute path to the location of the file in the file system
    3  hashes  Hashes optional  // One or more cryptographic hash codes of the file contents

IDN-Domain-Name = String /idn-hostname  // Internationalized Domain Name, [[RFC5890]](#rfc5890), Section 2.3.2.3.

IDN-Email-Addr = String /idn-email  // Internationalized email address, [[RFC6531]](#rfc6531)

IPv4-Net = Array /ipv4-net
    1  IPv4-Addr         // ipv4_addr:: IPv4 address as defined in [[RFC0791]](#rfc0791)
    2  Integer optional  // prefix_length:: CIDR prefix-length. If omitted, refers to a single host address.

IPv4-Connection = Record{1..*}         // 5-tuple that specifies a tcp/ip connection
    1  src_addr  IPv4-Net optional     // IPv4 source address range
    2  src_port  Port optional         // source service per [[RFC6335]](#rfc6335)
    3  dst_addr  IPv4-Net optional     // IPv4 destination address range
    4  dst_port  Port optional         // destination service per [[RFC6335]](#rfc6335)
    5  protocol  L4-Protocol optional  // layer 4 protocol (e.g., TCP) - see [Section 3.4.2.10](#34210-l4-protocol)

IPv6-Net = Array /ipv6-net
    1  IPv6-Addr         // ipv6_addr:: IPv6 address as defined in [[RFC8200]](#rfc8200)
    2  Integer optional  // prefix_length:: prefix length. If omitted, refers to a single host address.

IPv6-Connection = Record{1..*}         // 5-tuple that specifies a tcp/ip connection
    1  src_addr  IPv6-Net optional     // IPv6 source address range
    2  src_port  Port optional         // source service per [[RFC6335]](#rfc6335)
    3  dst_addr  IPv6-Net optional     // IPv6 destination address range
    4  dst_port  Port optional         // destination service per [[RFC6335]](#rfc6335)
    5  protocol  L4-Protocol optional  // layer 4 protocol (e.g., TCP) - [Section 3.4.2.10](#34210-l4-protocol)

IRI = String /iri  // Internationalized Resource Identifier, [[RFC3987]](#rfc3987).

MAC-Addr = Binary /eui  // Media Access Control / Extended Unique Identifier address - EUI-48 or EUI-64 as defined in [[EUI]](#eui).

Process = Map{1..*}
    1  pid           Process$Pid optional  // Process ID of the process
    2  name          String optional       // Name of the process
    3  cwd           String optional       // Current working directory of the process
    4  executable    File optional         // Executable that was executed to start the process
    5  parent        Process$pid optional  // Process that spawned this one
    6  command_line  String optional       // The full command line invocation used to start this process, including all arguments

URI = String /uri  // Uniform Resource Identifier, [[RFC3986]](#rfc3986).

Hashes = Map{1..*}                     // Cryptographic Hash values
    1  md5     Hashes$Md5 optional     // MD5 hash as defined in [[RFC1321]](#rfc1321)
    2  sha1    Hashes$Sha1 optional    // SHA1 hash as defined in [[RFC6234]](#rfc6234)
    3  sha256  Hashes$Sha256 optional  // SHA256 hash as defined in [[RFC6234]](#rfc6234)

Hostname = String /hostname  // Internet host name as specified in [[RFC1123]](#rfc1123)

IDN-Hostname = String /idn-hostname  // Internationalized Internet host name as specified in [[RFC5890]](#rfc5890), Section 2.3.2.3.

IPv4-Addr = Binary /ipv4-addr  // 32 bit IPv4 address as defined in [[RFC0791]](#rfc0791)

IPv6-Addr = Binary /ipv6-addr  // 128 bit IPv6 address as defined in [[RFC8200]](#rfc8200)

Port = Integer{0..65535}  // Transport Protocol Port Number, [[RFC6335]](#rfc6335)

AP-Specifiers = Map{1..*}  // TH actuator specifiers (may be empty).

Huntflow-Specifiers = Map                           // TH Huntflow specifiers.
    1  path           String optional               // Return huntflows at and below this filesystem location (absolute path).
    2  tags           Tags optional                 // Return huntflows with these keywords.
    3  arg_types      Specified-Arg-Types optional  // Return huntflows that take these argument types.
    4  arg_names      Specified-Arg-Names optional  // Return huntflows that take these argument types.
    5  format_types   Return-Type optional          // Return huntflows that produce these output types.
    6  return_format  Huntflow-Sections optional    // For each huntflow returned, include these data items.

Specified-Arg-Types = ArrayOf(Arg-Type)  // Return huntflows that take these argument types.

Specified-Arg-Names = ArrayOf(Arg-Name)  // Return huntflows that take arguments with these names.

AP-Results = Map{1..*}                                   // TH results defined in this profile.
    1  huntflow_info  Ap-results$Huntflow-info optional  // Structured data returned by Query: Huntflows.
    2  datasources    Datasource-Array optional          // Datasource names and info returned by Query Datasources.
    3  inv_returns    Inv-Returns optional               // STIX SCO object returns

Inv-Returns = ArrayOf(Inv-Return){1..*}  // Array of returns from threat hunt investigations.

Inv-Return = Record                                             // Data returned by a threat hunt, in various formatted types.
    1  string_returns  Inv-return$String-returns optional       // String return from an investigation
    2  stix_sco        STIX-Cybersecurity-Observables optional  // STIX SCO object returns

Timeranges = ArrayOf(Timerange)  // a timerange used in the execution of a hunt.

Timerange = Choice                                 // Identification of process to be targeted by Threat Hunting activity.
    1  timerange_absolute  Timerange-Abs optional  // Absolute timerange, defined by a start and end time in ISO 8601 format.
    2  timerange_relative  Timerange-Rel optional  // Relative timerange, example '3, Days' for last 3 days.

Time-Unit = Enumerated  // Time Unit Keywords.
    1  Days     //
    2  Hours    //
    3  Minutes  //
    4  Seconds  //

Timerange-Abs = Record{2..*}       // Absolute timerange, defined by a start and end time in ISO 8601 format.
    1  hunt_start_time  timestamp  // Start time, as a STIX time string.
    2  hunt_stop_time   timestamp  // Stop time, as a STIX time string.

Timerange-Rel = Record{2..*} // Relative timerange, example '3, Days' for last 3 days.
    1  number     Integer    // Number of specified Time Units used in Relative Timerange.
    2  time_unit  Time-Unit  // Time Unit Keywords.

Return-Type = Record{2..*} // Variable names and types expected as returns when using a Huntflow.
    1  var_name  Arg-Name  // Variable name to be returned by use of Huntflow.
    2  var_type  Arg-Type  // Type of data to be returned by use of Huntflow.

Datasource = Record{1..*}      // Datasource names and tags required for use with a particular Huntflow.
    1  ds_name  String         // Name of a Datasource used by a Huntflow in Kestrel runtime.
    2  ds_tags  Tags optional  // Tags applied to a Datasource for search or filter purposes.

Huntflow-Sections = ArrayOf(Huntflow-Section)  // For each huntflow returned, include these data items.

Huntflow-Section = Enumerated  // Data format to be returned by Query Huntflows. If none specified, return all.
    1  path              // Specifies the return should include the path to each Huntflow specified by the query conditions.
    2  uniqueId          // Specifies the return should include the ID of each Huntflow specified by the query conditions.
    3  version           // Specifies the return should include the ID of each Huntflow specified by the query conditions.
    4  args_required     // Specifies the returned data should include the required arguments for the available Huntflows.
    5  expected_returns  // Specifies the returned data should include the expected returns for the available Huntflows.
    6  script            // Specifies the returned data should include the full text of the Huntflow for each available Huntflow.

Huntflow-Info = Record{1..*}                       // Structured data returned by Query: Huntflows with specifiers for specific info.
    1  path              String optional           // Path used to identify a Huntflow in place of a name.
    2  uniqueId          Integer optional          // Unique ID associated with a specified Huntflow.
    3  version           String optional           // Unique ID associated with a specified Huntflow.
    4  args_required     Typed-Arguments optional  // List of arguments used in the specified Huntflow.
    5  expected_returns  Typed-Arguments optional  // Data returned by the specified Huntflows.
    6  script            String optional           // Text of Hunt logic implemented by specified Huntflow.

Datasource-Array = ArrayOf(Datasource)  // An Array of Datasources, with multiple uses in Threathunting

Tags = ArrayOf(String)  // Tags applied for search or filter purposes.

Typed-Arguments = MapOf(Arg-Name, Arg-Type)  // Argument names and types tied to a specific Huntflow.

Arg-Type = String  // Argument types used by a Huntflow. Follow STIX naming conventions, with lowercase characters and hyphens replacing spaces. Common types include process, file, and network-traffic.

Arg-Name = String  // Argument names used by a Huntflow. Follow C variable naming conventions. Examples include name, src_port, and x_unique_id.

STIX-Cybersecurity-Observables = ArrayOf(SCO)  // An Array of Cybersecurity Observables in STIX formatting

SCO = Choice  // Availiable Cybersecurity Observables in the STIX language
    1  Artifact              artifact
    2  Autonomous-System     autonomous-system
    3  Directory             directory
    4  Domain-Name           domain-name
    5  Email-Addr            email-addr
    6  Email-Message         email-message
    7  File                  file
    8  IPv4-Addr             ipv4-addr
    9  IPv6-Addr             ipv6-addr
   10  Mac-Addr              mac-addr
   11  Mutex                 mutex
   12  Network-Traffic       network-traffic
   13  Process               process
   14  Software              software
   15  URL                   url
   16  User-Account          user-account
   17  Windows-Registry-Key  windows-registry-key
   18  X509-Certificate      x509-certificate

artifact = Record                                                // The Artifact Object permits capturing an array of bytes (8-bits), as a base64-encoded string, or linking to a file-like payload.
    1  type                  Artifact$Type                       // The value of this property MUST be `artifact`.
    2  id                    Artifact$Id
    3  mime_type             Artifact$Mime-type                  // The value of this property MUST be a valid MIME type as specified in the IANA Media Types registry.
    4  payload_bin           Binary optional                     // Specifies the binary data contained in the artifact as a base64-encoded string.
    5  url                   url                                 // The value of this property MUST be a valid URL that resolves to the unencoded content.
    6  hashes                Artifact$Hashes optional            // Specifies a dictionary of hashes for the contents of the url or the payload_bin. This MUST be provided when the url property is present.
    7  encryption_algorithm  encryption_algorithm_enum optional  // If the artifact is encrypted, specifies the type of encryption algorithm the binary data  (either via payload_bin or url) is encoded in.
    8  decryption_key        String optional                     // Specifies the decryption key for the encrypted binary data (either via payload_bin or url).
    9  spec_version          spec_version optional
   10  object_marking_refs   object_marking_refs optional
   11  granular_markings     granular_markings optional
   12  defanged              defanged optional
   13  core_extensions       extensions optional

autonomous-system = Record                                                                                                                                                                                                                                                                                                                                                                                                                  // The AS object represents the properties of an Autonomous Systems (AS).
    1  type                 Autonomous-system$Type
    2  id                   Autonomous-system$Id
    3  number               Integer                       // Specifies the number assigned to the AS. Such assignments are typically performed by a Regional Internet Registries (RIR).
    4  name                 String optional               // Specifies the name of the AS.
    5  rir                  String optional               // Specifies the name of the Regional Internet Registry (RIR) that assigned the number to the AS.
    6  spec_version         spec_version optional
    7  object_marking_refs  object_marking_refs optional
    8  granular_markings    granular_markings optional
    9  defanged             defanged optional
   10  core_extensions      extensions optional

directory = Record                                                                                                                                                                                                                                                                                                                                                                                // The Directory Object represents the properties common to a file system directory.
    1  type                 Directory$Type
    2  id                   Directory$Id
    3  path                 String                        // Specifies the path, as originally observed, to the directory on the file system.
    4  path_enc             Directory$Path-enc            // Specifies the observed encoding for the path.
    5  ctime                timestamp                     // Specifies the date/time the directory was created.
    6  mtime                timestamp                     // Specifies the date/time the directory was last written to/modified.
    7  atime                timestamp                     // Specifies the date/time the directory was last accessed.
    8  contains_refs        Directory$Contains-refs       // Specifies a list of references to other File and/or Directory Objects contained within the directory.
    9  spec_version         spec_version optional
   10  object_marking_refs  object_marking_refs optional
   11  granular_markings    granular_markings optional
   12  defanged             defanged optional
   13  core_extensions      extensions optional

domain-name = Record                                                                                                                                                                                                                                                                                                                                                                                                                       // The Domain Name represents the properties of a network domain name.
    1  type                 Domain-name$Type
    2  id                   Domain-name$Id
    3  domain_name          String                                 // Specifies the value of the domain name.
    4  resolves_to_refs     Domain-name$Resolves-to-refs optional  // Specifies a list of references to one or more IP addresses or domain names that the domain name resolves to.
    5  spec_version         spec_version optional
    6  object_marking_refs  object_marking_refs optional
    7  granular_markings    granular_markings optional
    8  defanged             defanged optional
    9  core_extensions      extensions optional

email-addr = Record                                                                                                                                                                                                                                                                                                                                                                                                     // The Email Address Object represents a single email address.
    1  type                 Email-addr$Type
    2  id                   Email-addr$Id
    3  email_address        String                        // Specifies a single email address. This MUST not include the display name.
    4  display_name         String optional               // Specifies a single email display name, i.e., the name that is displayed to the human user of a mail application.
    5  belongs_to_ref       String optional               // Specifies the user account that the email address belongs to, as a reference to a User Account Object.
    6  spec_version         spec_version optional
    7  object_marking_refs  object_marking_refs optional
    8  granular_markings    granular_markings optional
    9  defanged             defanged optional
   10  core_extensions      extensions optional

email-message = Record                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              // The Email Message Object represents an instance of an email message.
    1  type                      Email-message$Type
    2  id                        Email-message$Id
    3  date                      timestamp optional                               // Specifies the date/time that the email message was sent.
    4  content_type              String optional                                  // Specifies the value of the 'Content-Type' header of the email message.
    5  from_ref                  String optional                                  // Specifies the value of the 'From:' header of the email message.
    6  sender_ref                spec_version optional                            // Specifies the value of the 'From' field of the email message.
    7  to_refs                   Email-message$To-refs optional                   // Specifies the mailboxes that are 'To:' recipients of the email message.
    8  cc_refs                   Email-message$Cc-refs optional                   // Specifies the mailboxes that are 'CC:' recipients of the email message.
    9  bcc_refs                  Email-message$Bcc-refs optional                  // Specifies the mailboxes that are 'BCC:' recipients of the email message.
   10  message_id                String optional                                  // Specifies the Message-ID field of the email message.
   11  subject                   String optional                                  // Specifies the subject of the email message.
   12  received_lines            Email-message$Received-lines optional            // Specifies one or more Received header fields that may be included in the email headers.
   13  additional_header_fields  Email-message$Additional-header-fields optional  // Specifies any other header fields found in the email message, as a dictionary.
   14  raw_email_ref             String optional                                  // Specifies the raw binary contents of the email message, including both the headers and body, as a reference to an Artifact Object.
   15  is_multipart              Boolean                                          // Indicates whether the email body contains multiple MIME parts.
   16  body_multipart            Email-message$Body-multipart optional            // Specifies a list of the MIME parts that make up the email body. This property MAY only be used if is_multipart is true.
   17  body                      String optional                                  // Specifies a string containing the email body. This field MAY only be used if is_multipart is false.
   18  spec_version              spec_version optional
   19  object_marking_refs       object_marking_refs optional
   20  granular_markings         granular_markings optional
   21  defanged                  defanged optional
   22  core_extensions           extensions optional

file = Record
    1  type                 File$Type                     // The value of this property MUST be `file`.
    2  id                   File$Id
    3  extensions           String optional               // The File Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: ntfs-ext, raster-image-ext, pdf-ext, archive-ext, windows-pebinary-ext
    4  hashes               File$Hashes optional          // Specifies a dictionary of hashes for the file.
    5  size                 File$Size optional            // Specifies the size of the file, in bytes, as a non-negative integer.
    6  name                 String
    7  name_enc             File$Name-enc optional        // Specifies the observed encoding for the name of the file.
    8  magic_number_hex     Hex optional                  // Specifies the hexadecimal constant ('magic number') associated with a specific file format that corresponds to the file, if applicable.
    9  mime_type            String optional               // Specifies the MIME type name specified for the file, e.g., 'application/msword'.
   10  ctime                timestamp optional            // Specifies the date/time the file was created.
   11  mtime                timestamp optional            // Specifies the date/time the file was last written to/modified.
   12  atime                timestamp optional            // Specifies the date/time the file was last accessed.
   13  parent_directory     String optional               // Specifies the parent directory of the file, as a reference to a Directory Object.
   14  contains_refs        File$Contains-refs optional   // Specifies a list of references to other Observable Objects contained within the file.
   15  content_ref          String optional               // Specifies the content of the file, represented as an Artifact Object.
   16  spec_version         spec_version optional
   17  object_marking_refs  object_marking_refs optional
   18  granular_markings    granular_markings optional
   19  defanged             defanged optional
   20  core_extensions      extensions optional

ipv4-addr = Record  // The IPv4 Address Object represents one or more IPv4 addresses expressed using CIDR notation.
    1  type                 Ipv4-addr$Type
    2  id                   Ipv4-addr$Id
    3  ipv4_addr            Ipv4-addr$Ipv4-addr
    4  resolves_to_refs     Ipv4-addr$Resolves-to-refs optional
    5  belongs_to_refs      Ipv4-addr$Belongs-to-refs optional
    6  spec_version         spec_version optional
    7  object_marking_refs  object_marking_refs optional
    8  granular_markings    granular_markings optional
    9  defanged             defanged optional
   10  core_extensions      extensions optional

ipv6-addr = Record
    1  type                 Ipv6-addr$Type
    2  id                   Ipv6-addr$Id
    3  ipv6_addr            Ipv6-addr$Ipv6-addr           // The IPv6 Address Object represents one or more IPv6 addresses expressed using CIDR notation.
    4  resolves_to_refs     Ipv6-addr$Resolves-to-refs    // Specifies a list of references to one or more Layer 2 Media Access Control (MAC) addresses that the IPv6 address resolves to.
    5  belongs_to_refs      Ipv6-addr$Belongs-to-refs     // Specifies a reference to one or more autonomous systems (AS) that the IPv6 address belongs to.
    6  spec_version         spec_version optional
    7  object_marking_refs  object_marking_refs optional
    8  granular_markings    granular_markings optional
    9  defanged             defanged optional
   10  core_extensions      extensions optional

mac-addr = Record                                                                                                                                                                                                                                                                                                           // Specifies one or more mac addresses expressed using CIDR notation.
    1  type                 Mac-addr$Type
    2  id                   Mac-addr$Id
    3  mac_address_value    Mac-addr$Mac-address-value    // Specifies one or more mac addresses expressed using CIDR notation.
    4  spec_version         spec_version optional
    5  object_marking_refs  object_marking_refs optional
    6  granular_markings    granular_markings optional
    7  defanged             defanged optional
    8  core_extensions      extensions optional

mutex = Record                                                                                                                                                                                                                                                        // The Mutex Object represents the properties of a mutual exclusion (mutex) object.
    1  type                 Mutex$Type
    2  id                   Mutex$Id
    3  name                 String                        // Specifies the name of the mutex object.
    4  spec_version         spec_version optional
    5  object_marking_refs  object_marking_refs optional
    6  granular_markings    granular_markings optional
    7  defanged             defanged optional
    8  core_extensions      extensions optional

network-traffic = Recordhe Network Traffic Object represents arbitrary network traffic that originates from a source and is addressed to a destination.
    1  type                 Network-traffic$Type
    2  id                   Network-traffic$Id
    3  extensions           network_traffic_extensions_dictionary optional  // The Network Traffic Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: http-ext, tcp-ext, icmp-ext, socket-ext
    4  start                Network-traffic$Start                           // Specifies the date/time the network traffic was initiated, if known.
    5  stop                 Network-traffic$Stop                            // Specifies the date/time the network traffic ended, if known.
    6  is_active            Boolean                                         // Indicates whether the network traffic is still ongoing.
    7  src_port             Network-traffic$Src-port                        // Specifies the source port used in the network traffic, as an integer. The port value MUST be in the range of 0 - 65535.
    8  dst_port             Network-traffic$Dst-port optional               // Specifies the destination port used in the network traffic, as an integer. The port value MUST be in the range of 0 - 65535.
    9  protocols            Network-traffic$Protocols                       // Specifies the protocols observed in the network traffic, along with their corresponding state.
   10  src_byte_count       Integer optional                                // Specifies the number of bytes, as a positive integer, sent from the source to the destination.
   11  dst_byte_count       Integer optional                                // Specifies the number of bytes, as a positive integer, sent from the destination to the source.
   12  src_packets          Integer optional                                // Specifies the number of packets, as a positive integer, sent from the source to the destination.
   13  dst_packets          Integer optional                                // Specifies the number of packets, as a positive integer, sent from the destination to the source.
   14  ipfix                ipfix_choice optional                           // Specifies any IP Flow Information Export (IPFIX) data for the traffic.
   15  src_payload_ref      String optional                                 // Specifies the bytes sent from the source to the destination.
   16  dst_payload_ref      String optional                                 // Specifies the bytes sent from the source to the destination.
   17  encapsulates_refs    Network-traffic$Encapsulates-refs               // Specifies the bytes sent from the source to the destination.
   18  encapsulated_by_ref  String optional                                 // Links to another network-traffic object which encapsulates this object.
   19  spec_version         spec_version optional
   20  object_marking_refs  object_marking_refs optional
   21  granular_markings    granular_markings optional
   22  defanged             defanged optional
   23  core_extensions      extensions optional

process = Recordhe Process Object represents common properties of an instance of a computer program as executed on an operating system.
    1  type                    Process$Type
    2  id                      Process$Id
    3  extensions              process_extensions_dictionary optional
    4  is_hidden               Boolean optional
    5  pid                     Integer optional                        // Specifies the Process ID, or PID, of the process.
    6  created_time            timestamp optional                      // Specifies the date/time at which the process was created.
    7  cwd                     String optional                         // Specifies the current working directory of the process.
    8  command_line            String optional                         // Specifies the full command line used in executing the process, including the process name (which may be specified individually via the binary_ref.name property) and any arguments.
    9  environment_variables   Process$Environment-variables optional  // Specifies the list of environment variables associated with the process as a dictionary.
   10  opened_connection_refs  String optional                         // Specifies the list of network connections opened by the process, as a reference to one or more Network Traffic Objects.
   11  creator_user_ref        Process$Creator-user-ref optional       // Specifies the user that created the process, as a reference to a User Account Object.
   12  image_ref               String optional                         // Specifies the executable binary that was executed as the process image, as a reference to a File Object.
   13  parent_ref              String optional                         // Specifies the other process that spawned (i.e. is the parent of) this one, as represented by a Process Object.
   14  child_refs              Process$Child-refs optional             // Specifies the other processes that were spawned by (i.e. children of) this process, as a reference to one or more other Process Objects.
   15  spec_version            spec_version optional
   16  object_marking_refs     object_marking_refs optional
   17  granular_markings       granular_markings optional
   18  defanged                defanged optional
   19  core_extensions         extensions optional

software = Record                                                                                                                                                                                                                                                                                        // The Software Object represents high-level properties associated with software, including software products.
    1  type                 Software$Type
    2  id                   String                        // %^software--
    3  name                 Software$Name                 // Specifies the name of the software.
    4  cpe                  Software$Cpe optional         // Specifies the Common Platform Enumeration (CPE) entry for the software, if available. The value for this property MUST be a CPE v2.3 entry from the official NVD CPE Dictionary.
    5  swid                 Software$Swid                 // Specifies the Software Identification (SWID) Tags entry for the software, if available.
    6  languages            Software$Languages            // Specifies the languages supported by the software. The value of each list member MUST be an ISO 639-2 language code.
    7  vendor               Software$Vendor               // Specifies the name of the vendor of the software.
    8  version              Software$Version              // Specifies the version of the software.
    9  spec_version         spec_version optional
   10  object_marking_refs  object_marking_refs optional
   11  granular_markings    granular_markings optional
   12  defanged             defanged optional
   13  core_extensions      extensions optional

user-account = Record                                                        // The Software Object represents high-level properties associated with software, including software products.
    1  type                     User-account$Type                            // The value of this property MUST be `user-account`.
    2  id                       User-account$Id
    3  user_account_extensions  user_account_extensions_dictionary optional  // The User Account Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: unix-account-ext.
    4  user_id                  String optional                              // Specifies the identifier of the account.
    5  credential               String optional                              // Specifies a cleartext credential. This is only intended to be used in capturing metadata from malware analysis (e.g., a hard-coded domain administrator password that the malware attempts to use for lateral movement) and SHOULD NOT be used for sharing of PII.
    6  account_login            String optional                              // Specifies the account login string, used in cases where the user_id property specifies something other than what a user would type when they login.
    7  account_type             String optional                              // Specifies the type of the account. This is an open vocabulary and values SHOULD come from the account-type-ov vocabulary.
    8  display_name             String optional                              // Specifies the display name of the account, to be shown in user interfaces, if applicable.
    9  is_service_account       Boolean optional                             // Indicates that the account is associated with a network service or system process (daemon), not a specific individual.
   10  is_privileged            Boolean optional                             // Specifies that the account has elevated privileges (i.e., in the case of root on Unix or the Windows Administrator account).
   11  can_escalate_privs       Boolean optional                             // Specifies that the account has the ability to escalate privileges (i.e., in the case of sudo on Unix or a Windows Domain Admin account).
   12  is_disabled              Boolean optional                             // Specifies if the account is disabled.
   13  account_created          timestamp optional                           // Specifies when the account was created.
   14  account_expires          timestamp optional                           // Specifies the expiration date of the account.
   15  credential_last_changed  timestamp optional                           // Specifies when the account credential was last changed.
   16  account_first_login      timestamp optional                           // Specifies when the account was first accessed.
   17  account_last_login       timestamp optional                           // Specifies when the account was last accessed.
   18  spec_version             spec_version optional
   19  object_marking_refs      object_marking_refs optional
   20  granular_markings        granular_markings optional
   21  defanged                 defanged optional
   22  core_extensions          extensions optional

url = Record                                              // The URL Object represents the properties of a uniform resource locator (URL).
    1  type                 Url$Type                      // The value of this property MUST be `url`.
    2  id                   Url$Id
    3  url_value            Url$Url-value                 // Specifies the value of the URL.
    4  spec_version         spec_version optional
    5  object_marking_refs  object_marking_refs optional
    6  granular_markings    granular_markings optional
    7  defanged             defanged optional
    8  core_extensions      extensions optional

windows-registry-key = Record                                              // The Registry Key Object represents the properties of a Windows registry key.
    1  type                 Windows-registry-key$Type                      // The value of this property MUST be `windows-registry-key`.
    2  id                   Windows-registry-key$Id
    3  key                  Windows-registry-key$Key                       // Specifies the full registry key including the hive.
    4  registry_values      Windows-registry-key$Registry-values optional  // Specifies the values found under the registry key.
    5  modified_time        timestamp optional                             // Specifies the last date/time that the registry key was modified.
    6  creator_user_ref     String optional                                // Specifies a reference to a user account, represented as a User Account Object, that created the registry key.
    7  number_of_subkeys    Integer optional                               // Specifies the number of subkeys contained under the registry key.
    8  spec_version         spec_version optional
    9  object_marking_refs  object_marking_refs optional
   10  granular_markings    granular_markings optional
   11  defanged             defanged optional
   12  core_extensions      extensions optional

x509-certificate = Record                                                           // The X509 Certificate Object represents the properties of an X.509 certificate.
    1  type                           X509-certificate$Type                         // The value of this property MUST be `x509-certificate`.
    2  id                             X509-certificate$Id
    3  is_self_signed                 Boolean optional                              // Specifies whether the certificate is self-signed, i.e., whether it is signed by the same entity whose identity it certifies.
    4  hashes                         X509-certificate$Hashes optional              // Specifies any hashes that were calculated for the entire contents of the certificate.
    5  version                        String optional                               // Specifies the version of the encoded certificate.
    6  serial_number                  String optional                               // Specifies the unique identifier for the certificate, as issued by a specific Certificate Authority.
    7  signature_algorithm            String optional                               // Specifies the name of the algorithm used to sign the certificate.
    8  issuer                         String optional                               // Specifies the name of the Certificate Authority that issued the certificate.
    9  validity_not_before            timestamp optional                            // Specifies the date on which the certificate validity period begins.
   10  validity_not_after             timestamp optional                            // Specifies the date on which the certificate validity period ends.
   11  subject                        spec_version optional                         // Specifies the name of the entity associated with the public key stored in the subject public key field of the certificate.
   12  subject_public_key_algorithm   String optional                               // Specifies the name of the algorithm with which to encrypt data being sent to the subject.
   13  subject_public_key_modulus     String optional                               // Specifies the modulus portion of the subject’s public RSA key.
   14  subject_public_key_extensions  Integer optional                              // Specifies the exponent portion of the subject’s public RSA key, as an integer.
   15  x509_v3_extensions             X509-certificate$X509-v3-extensions optional  // Specifies any standard X.509 v3 extensions that may be used in the certificate.
   16  spec_version                   spec_version optional
   17  object_marking_refs            object_marking_refs optional
   18  granular_markings              granular_markings optional
   19  defanged                       defanged optional
   20  core_extensions                extensions optional

encryption_algorithm_enum = Enumerated
    1  AES-256-GCM          //
    2  ChaCha20-Poly1305    //
    3  mime-type-indicated  //

mime-part-type = Record                      // Specifies a component of a multi-part email body.
    1  body                 String optional  // Specifies the contents of the MIME part if the content_type is not provided OR starts with text/
    2  body_raw_ref         String optional  // Specifies the contents of non-textual MIME parts, that is those whose content_type does not start with text/, as a reference to an Artifact Object or File Object.
    3  content_type         String optional  // Specifies the value of the 'Content-Type' header field of the MIME part.
    4  content_disposition  String optional  // Specifies the value of the 'Content-Disposition' header field of the MIME part.

email-additional-header-fields = ArrayOf(email_additional_header_field)  // Specifies any other header fields (except for date, received_lines, content_type, from_ref, sender_ref, to_refs, cc_refs, bcc_refs, and subject) found in the email message, as a dictionary.

email_additional_header_field = MapOf(email_additional_header_fieldname, email_additional_header_value)  // Specifies any other header fields (except for date, received_lines, content_type, from_ref, sender_ref, to_refs, cc_refs, bcc_refs, and subject) found in the email message, as a dictionary.

email_additional_header_fieldname = String (%^((?!((^|, )(date|received_lines|content_type|from_ref|sender_ref|to_refs|cc_refs|bcc_refs|subject))+$).)*$%)  // Specifies any other header fields (except for date, received_lines, content_type, from_ref, sender_ref, to_refs, cc_refs, bcc_refs, and subject) found in the email message, as a dictionary.

email_additional_header_value = Choice
    1  String_Value  Email-additional-header-value$String-value
    2  String_Array  Email-additional-header-value$String-array

windows_registry_value_type = Record
    1  name                String optional                  // Specifies the name of the registry value. For specifying the default value in a registry key, an empty string MUST be used.
    2  data                String optional                  // Specifies the data contained in the registry value.
    3  registry_data_type  win_registry_data_type optional  // Specifies the registry (REG_*) data type used in the registry value.

win_registry_data_type = Enumerated    // Specifies the registry (REG_*) data type used in the registry value.
    1  REG_NONE                        //
    2  REG_SZ                          //
    3  REG_EXPAND_SZ                   //
    4  REG_BINARY                      //
    5  REG_DWORD                       //
    6  REG_DWORD_BIG_ENDIAN            //
    7  REG_DWORD_LITTLE_ENDIAN         //
    8  REG_LINK                        //
    9  REG_MULTI_SZ                    //
   10  REG_RESOURCE_LIST               //
   11  REG_FULL_RESOURCE_DESCRIPTION   //
   12  REG_RESOURCE_REQUIREMENTS_LIST  //
   13  REG_QWORD                       //
   14  REG_INVALID_TYPE                //

x509_v3_extensions_type = Record
    1  basic_constraints                    String optional     // Specifies a multi-valued extension which indicates whether a certificate is a CA certificate.
    2  name_constraints                     String optional     // Specifies a namespace within which all subject names in subsequent certificates in a certification path MUST be located.
    3  policy_constraints                   String optional     // Specifies any constraints on path validation for certificates issued to CAs.
    4  key_usage                            String optional     // Specifies a multi-valued extension consisting of a list of names of the permitted key usages.
    5  extend_key_usage                     String optional     // Specifies a list of usages indicating purposes for which the certificate public key can be used for.
    6  subject_key_identifier               String optional     // Specifies the identifier that provides a means of identifying certificates that contain a particular public key.
    7  authority_key_identifier             String optional     // Specifies the identifier that provides a means of identifying the public key corresponding to the private key used to sign a certificate.
    8  subject_alternative_name             String optional     // Specifies the additional identities to be bound to the subject of the certificate.
    9  issuer_alternative_name              String optional     // Specifies the additional identities to be bound to the issuer of the certificate.
   10  subject_directory_attributes         String optional     // Specifies the identification attributes (e.g., nationality) of the subject.
   11  crt_distribution_points              String optional     // Specifies how CRL information is obtained.
   12  inhibit_any_policy                   String optional     // Specifies the number of additional certificates that may appear in the path before anyPolicy is no longer permitted.
   13  private_key_usage_period_not_before  timestamp optional  // Specifies the date on which the validity period begins for the private key, if it is different from the validity period of the certificate.
   14  private_key_usage_period_not_after   timestamp optional  // Specifies the date on which the validity period ends for the private key, if it is different from the validity period of the certificate.
   15  certificate_policies                 String optional     // Specifies a sequence of one or more policy information terms, each of which consists of an object identifier (OID) and optional qualifiers.
   16  policy_mappings                      String optional     // Specifies one or more pairs of OIDs; each pair includes an issuerDomainPolicy and a subjectDomainPolicy

file_extensions_dictionary = Record
    1  ntfs_ext  ntfs_ext optional  // The NTFS file extension specifies a default extension for capturing properties specific to the storage of the file on the NTFS file system.

ntfs_ext = Record                                                        // The NTFS file extension specifies a default extension for capturing properties specific to the storage of the file on the NTFS file system.
    1  sid                     String optional                           // Specifies the security ID (SID) value assigned to the file.
    2  alternate_data_streams  Ntfs-ext$Alternate-data-streams optional  // Specifies a list of NTFS alternate data streams that exist for the file.

ntfs_atlternate_data_stream = Record
    1  name    String                                       // Specifies the name of the alternate data stream.
    2  hashes  Ntfs-atlternate-data-stream$Hashes optional  // Specifies a dictionary of hashes for the data contained in the alternate data stream.
    3  size    Ntfs-atlternate-data-stream$Size optional    // Specifies the size of the alternate data stream, in bytes, as a non-negative integer.

ipfix_choice = Choice  // Specifies any IP Flow Information Export (IPFIX) data for the traffic.
    1  ipfix_string   String
    2  ipfix_integer  Integer

hashes = Record                            // The Hashes type represents one or more cryptographic hashes, as a special set of key/value pairs
    1  MD5       Hashes$Md5 optional       // Specifies the MD5 message digest algorithm.
    2  SHA-1     Hashes$Sha-1 optional     // Specifies the MD5 message digest algorithm.
    3  SHA-256   Hashes$Sha-256 optional   // Specifies the MD5 message digest algorithm.
    4  SHA-512   Hashes$Sha-512 optional   // Specifies the MD5 message digest algorithm.
    5  SHA3-256  Hashes$Sha3-256 optional  // Specifies the MD5 message digest algorithm.
    6  SHA3-512  Hashes$Sha3-512 optional  // Specifies the MD5 message digest algorithm.
    7  SSDEEP    Hashes$Ssdeep optional    // Specifies the MD5 message digest algorithm.
    8  TLSH      Hashes$Tlsh optional      // Specifies the MD5 message digest algorithm.

network_traffic_extensions_dictionary = Record      // The User Account Object defines the following extensions. In addition to these, producers MAY create their own.
    1  http_request_ext  http_request_ext optional  // The HTTP request extension specifies a default extension for capturing network traffic properties specific to HTTP requests.
    2  icmp_ext          icmp_ext optional          // The ICMP extension specifies a default extension for capturing network traffic properties specific to ICMP.
    3  socket_ext        socket_ext optional        // The Network Socket extension specifies a default extension for capturing network traffic properties associated with network sockets.
    4  tcp_ext           tcp_ext optional           // The TCP extension specifies a default extension for capturing network traffic properties specific to TCP.

http_request_ext = Record                                               // The HTTP request extension specifies a default extension for capturing network traffic properties specific to HTTP requests.
    1  request_method         String                                    // Specifies the HTTP method portion of the HTTP request line, as a lowercase string.
    2  request_value          String                                    // Specifies the value (typically a resource path) portion of the HTTP request line.
    3  request_version        String optional                           // Specifies the HTTP method portion of the HTTP request line, as a lowercase string.
    4  request_header         Http-request-ext$Request-header optional  // Specifies the value (typically a resource path) portion of the HTTP request line.
    5  message_body_length    String optional                           // Specifies the HTTP method portion of the HTTP request line, as a lowercase string.
    6  message_body_data_ref  String optional                           // Specifies the value (typically a resource path) portion of the HTTP request line.

icmp_ext = Record          // The ICMP extension specifies a default extension for capturing network traffic properties specific to ICMP.
    1  icmp_type_hex  Hex  // Specifies the ICMP type byte.
    2  icmp_code_hex  Hex  // Specifies the ICMP code byte.

socket_ext = Record                                              // The Network Socket extension specifies a default extension for capturing network traffic properties associated with network sockets.
    1  address_family     address_family                         // Specifies the address family (AF_*) that the socket is configured for.
    2  is_blocking        Boolean optional                       // Specifies whether the socket is in blocking mode.
    3  is_listening       String optional                        // Specifies whether the socket is in listening mode.
    4  options            Socket-ext$Options optional            // Specifies any options (SO_*) that may be used by the socket, as a dictionary.
    5  socket_type        socket_type optional                   // Specifies the type of the socket.
    6  socket_descriptor  Socket-ext$Socket-descriptor optional  // Specifies the socket file descriptor value associated with the socket, as a non-negative integer.
    7  socket_handle      Integer optional                       // Specifies the handle or inode value associated with the socket.

tcp_ext = Record           // The TCP extension specifies a default extension for capturing network traffic properties specific to TCP.
    1  src_flags_hex  Hex  // Specifies the source TCP flags, as the union of all TCP flags observed between the start of the traffic (as defined by the start property) and the end of the traffic (as defined by the end property).
    2  dst_flags_hex  Hex  // Specifies the destination TCP flags, as the union of all TCP flags observed between the start of the traffic (as defined by the start property) and the end of the traffic (as defined by the end property).

address_family = Enumerated  // Specifies the current status of the service. windows-service-status-enum
    1  AF_UNSPEC     //
    2  AF_INET       //
    3  AF_IPX        //
    4  AF_APPLETALK  //
    5  AF_NETBIOS    //
    6  AF_INET6      //
    7  AF_IRDA       //
    8  AF_BTH        //

socket_option = Record  // Specifies any options (SO_*) that may be used by the socket, as a dictionary.
    1  socket_option  Socket-option$Socket-option
    2  option_value   Integer

socket_type = Enumerated  // Specifies the type of the socket.
    1  SOCK_STREAM     //
    2  SOCK_DGRAM      //
    3  SOCK_RAW        //
    4  SOCK_RDM        //
    5  SOCK_SEQPACKET  //

user_account_extensions_dictionary = Record         // The User Account Object defines the following extensions. In addition to these, producers MAY create their own.
    1  unix_account_ext  unix_account_ext optional  // The User Account Object defines the following extensions. In addition to these, producers MAY create their own.

unix_account_ext = Record
    1  gid  Number optional  // Specifies the primary group ID of the account.

process_extensions_dictionary = Record
    1  windows_proccess_extension  windows_proccess_extension optional  // The Windows Process extension specifies a default extension for capturing properties specific to Windows processes.
    2  windows_service_ext         windows_service_ext optional         // The Windows Service extension specifies a default extension for capturing properties specific to Windows services.

windows_proccess_extension = Record                            // The Windows Process extension specifies a default extension for capturing properties specific to Windows processes.
    1  aslr_enabled     Boolean optional                       // Specifies whether Address Space Layout Randomization (ASLR) is enabled for the process.
    2  dep_enabled      Boolean optional                       // Specifies whether Data Execution Prevention (DEP) is enabled for the process.
    3  priority         String optional                        // Specifies the current priority class of the process in Windows.
    4  owner_sid        String optional                        // Specifies the Security ID (SID) value of the owner of the process.
    5  window_title     String optional                        // Specifies the title of the main window of the process.
    6  startup_info     startup_info_dictionary optional       // Specifies the STARTUP_INFO struct used by the process, as a dictionary.
    7  integrity_level  windows_integrity_level_enum optional  // Specifies the Windows integrity level, or trustworthiness, of the process.

startup_info_dictionary = Array
    1  String optional
    2  String optional
    3  String optional
    4  String optional
    5  String optional
    6  String optional
    7  String optional
    8  String optional
    9  Startup-info-dictionary$Lpreserved optional
   10  Startup-info-dictionary$Lpreserved2 optional
   11  Integer optional
   12  Integer optional
   13  Integer optional
   14  Integer optional
   15  Integer optional
   16  Integer optional
   17  Integer optional
   18  Startup-info-dictionary$Cbreserved2 optional

windows_integrity_level_enum = Enumerated
    1  low     //
    2  medium  //
    3  high    //
    4  system  //

service_status = Enumerated      // Specifies the current status of the service. windows-service-status-enum
    1  SERVICE_CONTINUE_PENDING  //
    2  SERVICE_PAUSE_PENDING     //
    3  SERVICE_PAUSED            //
    4  SERVICE_RUNNING           //
    5  SERVICE_START_PENDING     //
    6  SERVICE_STOP_PENDING      //
    7  SERVICE_STOPPED           //

service_type = Enumerated           // Specifies the type of the service. windows-service-enum
    1  SERVICE_KERNEL_DRIVER        //
    2  SERVICE_FILE_SYSTEM_DRIVER   //
    3  SERVICE_WIN32_OWN_PROCESS    //
    4  SERVICE_WIN32_SHARE_PROCESS  //

windows_service_ext = Record                                            // The Windows Service extension specifies a default extension for capturing properties specific to Windows services.
    1  service_name      String optional                                // Specifies the name of the service.
    2  descriptions      Windows-service-ext$Descriptions optional      // Specifies the descriptions defined for the service.
    3  display_name      String optional                                // Specifies the displayed name of the service in Windows GUI controls.
    4  group_name        String optional                                // Specifies the name of the load ordering group of which the service is a member.
    5  start_type        start_type optional                            // Specifies the start options defined for the service. windows-service-start-enum
    6  service_dll_refs  Windows-service-ext$Service-dll-refs optional  // Specifies the DLLs loaded by the service, as a reference to one or more File Objects.
    7  service_type      service_type optional                          // Specifies the type of the service. windows-service-enum
    8  service_status    service_status optional                        // Specifies the current status of the service. windows-service-status-enum

start_type = Enumerated      // Specifies the start options defined for the service. windows-service-start-enum
    1  SERVICE_AUTO_START    //
    2  SERVICE_BOOT_START    //
    3  SERVICE_DEMAND_START  //
    4  SERVICE_DISABLED      //
    5  SERVICE_SYSTEM_ALERT  //

spec_version = Enumerated  // The version of the STIX specification used to represent the content in this cyber-observable.
    1  2.0  //
    2  2.1  //

object_marking_refs = ArrayOf(identifier){1..*}  // The list of marking-definition objects to be applied to this object.

granular_marking = Record
    1  selectors  identifier  // A list of selectors for content contained within the STIX object in which this property appears.
    2  lang       String      // Identifies the language of the text identified by this marking.
    3  pattern    identifier  // The marking_ref property specifies the ID of the marking-definition object that describes the marking.

granular_markings = ArrayOf(granular_marking){1..*}  // The set of granular markings that apply to this object.

defanged = Boolean  // Defines whether or not the data contained within the object has been defanged.

identifier = String (%^[a-z][a-z0-9-]+[a-z0-9]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$%)  // Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4.

extensions = Record{1..*}  // Specifies any extensions of the object, as a dictionary.
    1  extension             Extensions$Extension
    2  extension_definition  extension

properties = Array                                                                                                                                                                                                                                                                                                                                                                                                                       // Rules for custom properties
    1  Binary optional
    2  Hex optional               // hex:: The hex data type encodes an array of octets (8-bit bytes) as hexadecimal. The string MUST consist of an even number of hexadecimal characters, which are the digits '0' through '9' and the letters 'a' through 'f'.  In order to allow pattern matching on custom objects, all properties that use the hex type, the property name MUST end with '_hex'.
    3  Properties$Array optional
    4  String optional
    5  Integer optional
    6  Boolean optional
    7  Number optional
    8  extensions optional

extension = Record{1..*}
    1  extension_type  extension_type_enum  // The type of extension.
    2  properties      properties

extension_type_enum = Enumerated
    1  new-sdo                      //
    2  new-sco                      //
    3  new-sro                      //
    4  property-extension           //
    5  toplevel-property-extension  //

Hex = String (%^([a-fA-F0-9]{2})+$%)

timestamp = String (%^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$%)

Features = ArrayOf(Feature){0..10} unique  // An array of zero to ten names used to query a Consume for its supported capabilities.

Date-Time = Integer{0..*}  // Date and Time

Duration = Integer{0..*}  // A length of time

Feature = Enumerated  // Specifies the results to be returned from a query features Command
    1  versions    // List of OpenC2 Language versions supported by this Consumer
    2  profiles    // List of profiles supported by this Consumer
    3  pairs       // List of supported Actions and applicable Targets
    4  rate_limit  // Maximum number of Commands per minute supported by design or policy

L4-Protocol = Enumerated  // Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value, [RFC5237]
    1  icmp  // Internet Control Message Protocol - [RFC0792]
    6  tcp   // Transmission Control Protocol - [RFC0793]
   17  udp   // User Datagram Protocol - [RFC0768]
  132  sctp  // Stream Control Transmission Protocol - [RFC4960]

Payload = Choice
    1  bin  Binary  // Specifies the data contained in the artifact
    2  url  URI     // MUST be a valid URL that resolves to the un-encoded content

Nsid = String{1..16}  // A short identifier that refers to a namespace.

Response-Type = Enumerated
    0  none      // No response
    1  ack       // Respond when Command received
    2  status    // Respond with progress toward Command completion
    3  complete  // Respond when all aspects of Command completed

Status-Code = Enumerated.ID
  102  // Processing:: an interim Response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it
  200  // OK:: the Command has succeeded
  201  // Created:: the Command has succeeded and a new resource has been created as a result of it
  400  // Bad Request:: the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)
  401  // Unauthorized:: the Command Message lacks valid authentication credentials for the target resource or authorization has been refused for the submitted credentials
  403  // Forbidden:: the Consumer understood the Command but refuses to authorize it
  404  // Not Found:: the Consumer has not found anything matching the Command
  500  // Internal Error:: the Consumer encountered an unexpected condition that prevented it from performing the Command
  501  // Not Implemented:: the Consumer does not support the functionality required to perform the Command
  503  // Service Unavailable:: the Consumer is currently unable to perform the Command due to a temporary overloading or maintenance of the Consumer

Command-ID = String (%^\S{0,36}$%)  // Command Identifier

Version = String  // Major.Minor version number

Process$pid = Integer{0..*}  // Process ID of the process

Results$Versions = ArrayOf(Version){1..10} unique  // List of OpenC2 language versions supported by this Actuator

Results$Profiles = ArrayOf(Nsid){1..*} unique  // List of profiles supported by this Actuator

Results$Rate-limit = Number{0.0..*}  // Maximum number of requests per minute supported by design or policy

Results$Args = ArrayOf(String)

Huntargs$String-args = ArrayOf(String)  // string arguments supplied as huntargs.

Huntargs$Integer-args = ArrayOf(Integer)  // integer arguments supplied as huntargs.

Process$Pid = Integer{0..*}  // Process ID of the process

Hashes$Md5 = Binary /x  // MD5 hash as defined in [[RFC1321]](#rfc1321)

Hashes$Sha1 = Binary /x  // SHA1 hash as defined in [[RFC6234]](#rfc6234)

Hashes$Sha256 = Binary /x  // SHA256 hash as defined in [[RFC6234]](#rfc6234)

Ap-results$Huntflow-info = ArrayOf(Huntflow-Info)  // Structured data returned by Query: Huntflows.

Inv-return$String-returns = ArrayOf(String)  // String return from an investigation

Artifact$Type = String (%^artifact$%)  // The value of this property MUST be `artifact`.

Artifact$Id = String (%^artifact--%)

Artifact$Mime-type = String (%^(application|audio|font|image|message|model|multipart|text|video)/[a-zA-Z0-9.+_-]+%)  // The value of this property MUST be a valid MIME type as specified in the IANA Media Types registry.

Artifact$Hashes = ArrayOf(hashes)  // Specifies a dictionary of hashes for the contents of the url or the payload_bin. This MUST be provided when the url property is present.

Autonomous-system$Type = String (%^autonomous-system$%)

Autonomous-system$Id = String (%^autonomous-system--%)

Directory$Type = String (%^directory$%)

Directory$Id = String (%^directory--%)

Directory$Path-enc = String (%^[a-zA-Z0-9/\\.+_:-]{2,250}$%)  // Specifies the observed encoding for the path.

Directory$Contains-refs = ArrayOf(String){1..*}  // Specifies a list of references to other File and/or Directory Objects contained within the directory.

Domain-name$Type = String (%^domain-name$%)

Domain-name$Id = String (%^domain-name--%)

Domain-name$Resolves-to-refs = ArrayOf(String){1..*}  // Specifies a list of references to one or more IP addresses or domain names that the domain name resolves to.

Email-addr$Type = String (%^email-addr$%)

Email-addr$Id = String (%^email-addr--%)

Email-message$Type = String (%^email-message$%)

Email-message$Id = String (%^email-message--%)

Email-message$To-refs = ArrayOf(String){1..*}  // Specifies the mailboxes that are 'To:' recipients of the email message.

Email-message$Cc-refs = ArrayOf(String){1..*}  // Specifies the mailboxes that are 'CC:' recipients of the email message.

Email-message$Bcc-refs = ArrayOf(String){1..*}  // Specifies the mailboxes that are 'BCC:' recipients of the email message.

Email-message$Received-lines = ArrayOf(String)  // Specifies one or more Received header fields that may be included in the email headers.

Email-message$Additional-header-fields = ArrayOf(email-additional-header-fields)  // Specifies any other header fields found in the email message, as a dictionary.

Email-message$Body-multipart = ArrayOf(mime-part-type)  // Specifies a list of the MIME parts that make up the email body. This property MAY only be used if is_multipart is true.

File$Type = String (%^file$%)  // The value of this property MUST be `file`.

File$Id = String (%^file--%)

File$Hashes = ArrayOf(hashes)  // Specifies a dictionary of hashes for the file.

File$Size = Integer{0..*}  // Specifies the size of the file, in bytes, as a non-negative integer.

File$Name-enc = String (%^[a-zA-Z0-9/\\.+_:-]{2,250}$%)  // Specifies the observed encoding for the name of the file.

File$Contains-refs = ArrayOf(String){1..*}  // Specifies a list of references to other Observable Objects contained within the file.

Ipv4-addr$Type = String (%^ipv4-addr$%)

Ipv4-addr$Id = String (%^ipv4-addr--%)

Ipv4-addr$Ipv4-addr = String (%^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))?$%)

Ipv4-addr$Resolves-to-refs = ArrayOf(String){1..*}

Ipv4-addr$Belongs-to-refs = ArrayOf(String){1..*}

Ipv6-addr$Type = String (%^ipv6-addr$%)

Ipv6-addr$Id = String (%^ipv6-addr--%)

Ipv6-addr$Ipv6-addr = String (%^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9]))?$%)  // The IPv6 Address Object represents one or more IPv6 addresses expressed using CIDR notation.

Ipv6-addr$Resolves-to-refs = ArrayOf(String)  // Specifies a list of references to one or more Layer 2 Media Access Control (MAC) addresses that the IPv6 address resolves to.

Ipv6-addr$Belongs-to-refs = ArrayOf(String)  // Specifies a reference to one or more autonomous systems (AS) that the IPv6 address belongs to.

Mac-addr$Type = String (%^mac-addr$%)

Mac-addr$Id = String (%^mac-addr--%)

Mac-addr$Mac-address-value = String (%^([0-9a-f]{2}[:]){5}([0-9a-f]{2})$%)  // Specifies one or more mac addresses expressed using CIDR notation.

Mutex$Type = String (%^mutex$%)

Mutex$Id = String (%^mutex--%)

Network-traffic$Type = String (%^network-traffic$%)

Network-traffic$Id = String (%^network-traffic--%)

Network-traffic$Start = String (%^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z%)  // Specifies the date/time the network traffic was initiated, if known.

Network-traffic$Stop = String (%^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z%)  // Specifies the date/time the network traffic ended, if known.

Network-traffic$Src-port = Integer{0..65535}  // Specifies the source port used in the network traffic, as an integer. The port value MUST be in the range of 0 - 65535.

Network-traffic$Dst-port = Integer{0..65535}  // Specifies the destination port used in the network traffic, as an integer. The port value MUST be in the range of 0 - 65535.

Network-traffic$Protocols = ArrayOf(String){1..*}  // Specifies the protocols observed in the network traffic, along with their corresponding state.

Network-traffic$Encapsulates-refs = ArrayOf(String){1..*}  // Specifies the bytes sent from the source to the destination.

Process$Type = String (%^process$%)

Process$Id = String (%^process--%)

Process$Environment-variables = ArrayOf(String)  // Specifies the list of environment variables associated with the process as a dictionary.

Process$Creator-user-ref = ArrayOf(String){1..*}  // Specifies the user that created the process, as a reference to a User Account Object.

Process$Child-refs = ArrayOf(String){1..*}  // Specifies the other processes that were spawned by (i.e. children of) this process, as a reference to one or more other Process Objects.

Software$Type = String (%^software$%)

Software$Name = String{1..*}  // Specifies the name of the software.

Software$Cpe = String (%cpe:2\\.3:[aho\\*\\-](:(((\\?*|\\*?)([a-zA-Z0-9\\-\\._]|(\\\\[\\\\\\*\\?!\"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]))+(\\?*|\\*?))|[\\*\\-])){5}(:(([a-zA-Z]{2,3}(-([a-zA-Z]{2}|[0-9]{3}))?)|[\\*\\-]))(:(((\\?*|\\*?)([a-zA-Z0-9\\-\\._]|(\\\\[\\\\\\*\\?!\"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]))+(\\?*|\\*?))|[\\*\\-])){4}%)  // Specifies the Common Platform Enumeration (CPE) entry for the software, if available. The value for this property MUST be a CPE v2.3 entry from the official NVD CPE Dictionary.

Software$Swid = String  // Specifies the Software Identification (SWID) Tags entry for the software, if available.

Software$Languages = ArrayOf(String)  // Specifies the languages supported by the software. The value of each list member MUST be an ISO 639-2 language code.

Software$Vendor = String  // Specifies the name of the vendor of the software.

Software$Version = String  // Specifies the version of the software.

User-account$Type = String (%^user-account$%)  // The value of this property MUST be `user-account`.

User-account$Id = String (%^user-account--%)

Url$Type = String (%^url$%)  // The value of this property MUST be `url`.

Url$Id = String (%^url%)

Url$Url-value = String (%^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?%)  // Specifies the value of the URL.

Windows-registry-key$Type = String (%^windows-registry-key$%)  // The value of this property MUST be `windows-registry-key`.

Windows-registry-key$Id = String (%^windows-registry-key--%)

Windows-registry-key$Key = String (%^((?!((^|, )(HKLM|HKCC|HKCR|HKCU|HKU|hklm|hkcc|hkcr|hkcu|hku))+$).)*$%)  // Specifies the full registry key including the hive.

Windows-registry-key$Registry-values = ArrayOf(windows_registry_value_type)  // Specifies the values found under the registry key.

X509-certificate$Type = String (%^x509-certificate$%)  // The value of this property MUST be `x509-certificate`.

X509-certificate$Id = String (%^x509-certificate--%)

X509-certificate$Hashes = ArrayOf(hashes)  // Specifies any hashes that were calculated for the entire contents of the certificate.

X509-certificate$X509-v3-extensions = ArrayOf(x509_v3_extensions_type)  // Specifies any standard X.509 v3 extensions that may be used in the certificate.

Email-additional-header-value$String-value = String (%[a-zA-Z0-9_-]{0,250}^$%)

Email-additional-header-value$String-array = ArrayOf(String){2..*}

Ntfs-ext$Alternate-data-streams = ArrayOf(ntfs_atlternate_data_stream)  // Specifies a list of NTFS alternate data streams that exist for the file.

Ntfs-atlternate-data-stream$Hashes = ArrayOf(hashes)  // Specifies a dictionary of hashes for the data contained in the alternate data stream.

Ntfs-atlternate-data-stream$Size = Integer{0..*}  // Specifies the size of the alternate data stream, in bytes, as a non-negative integer.

Hashes$Sha-1 = String (%^[a-fA-F0-9]{40}$%)  // Specifies the MD5 message digest algorithm.

Hashes$Sha-256 = String (%^[a-fA-F0-9]{64}$%)  // Specifies the MD5 message digest algorithm.

Hashes$Sha-512 = String (%^[a-fA-F0-9]{128}$%)  // Specifies the MD5 message digest algorithm.

Hashes$Sha3-256 = String (%^[a-fA-F0-9]{64}$%)  // Specifies the MD5 message digest algorithm.

Hashes$Sha3-512 = String (%^[a-fA-F0-9]{128}$%)  // Specifies the MD5 message digest algorithm.

Hashes$Ssdeep = String (%^[a-zA-Z0-9/+:.]{1,128}$%)  // Specifies the MD5 message digest algorithm.

Hashes$Tlsh = String (%^[a-zA-Z0-9]{70}$%)  // Specifies the MD5 message digest algorithm.

Http-request-ext$Request-header = ArrayOf(String)  // Specifies the value (typically a resource path) portion of the HTTP request line.

Socket-ext$Options = ArrayOf(socket_option)  // Specifies any options (SO_*) that may be used by the socket, as a dictionary.

Socket-ext$Socket-descriptor = Integer{0..*}  // Specifies the socket file descriptor value associated with the socket, as a non-negative integer.

Socket-option$Socket-option = String (%^(SO|ICMP|ICMP6|IP|IPV6|MCAST|TCP|IRLMP)(_[A-Z]+)+$%)

Startup-info-dictionary$Lpreserved = String

Startup-info-dictionary$Lpreserved2 = String

Startup-info-dictionary$Cbreserved2 = Integer{0..0}

Windows-service-ext$Descriptions = ArrayOf(String){1..*}  // Specifies the descriptions defined for the service.

Windows-service-ext$Service-dll-refs = ArrayOf(String)  // Specifies the DLLs loaded by the service, as a reference to one or more File Objects.

Extensions$Extension = String (%^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-ext$%)

Properties$Array = ArrayOf(String){1..*}
