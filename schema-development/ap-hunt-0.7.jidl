     package:  "https://github.com/oasis-tcs/openc2-ap-hunt"
     version:  "0-wd01"
       title:  "Threat Hunting Profile"
 description:  "Data definitions for Threat Hunting (TH) functions"
  namespaces: {
                "ls": "http://oasis-open.org/openc2/oc2ls-types/v1.1",
                "oca": "http://placeholder.org/oca-extensions-for-stix",
                "sco": "http://placeholder.org/stix-sco-jadn"
              },
     exports:  ["AP-Target", "AP-Args", "AP-Specifiers", "AP-Results"]
      config:  {"$MaxBinary": 5555, "$MaxString": 5555, "$MaxElements": 555, "$Sys": "$", "$TypeName": "^[A-Za-z][-:_A-Za-z0-9]{0,63}$", "$FieldName": "^[A-Za-z][-:_A-Za-z0-9]{0,63}$", "$NSID": "^[A-Za-z][A-Za-z0-9]{0,7}$"}

Action = Enumerated
    3  query        // Initiate a request for information.
   30  investigate  // Task the recipient to aggregate and report information as it pertains to a security event or incident.

Target = Enumerated
    9  features  //
 1036  th        //

Args = Enumerated
    1  start_time          //
    2  stop_time           //
    3  duration            //
    4  response_requested  //
 1036  th                  //

Actuator = Enumerated
 1036  th  //

Results = Enumerated
    1  versions    //
    2  profiles    //
    3  pairs       //
    4  rate_limit  //
    5  args        //
 1036  th          //

Pairs = Enumerated
    3  query: features, /huntflows, /datasources  //
   30  investigate: /hunt                         //

AP-Target = Choice                       // TH targets defined in this profile.
    1  hunt         String               // A procedure to find a set of entities in the monitored environment that associates with a cyberthreat.
    2  huntflows    Huntflow-Specifiers  // TH Huntflow specifiers.
    3  datasources  String optional

AP-Args = Map              // TH command arguments defined in this profile.
    1  huntargs  Huntargs  // Arguments for use in conjunction with hunt implementation.

Huntargs = Record{1..*}                                          // TH command arguments defined in this profile.
    1  string_args      Huntargs$String-args optional            // string arguments supplied as huntargs.
    2  integer_args     Huntargs$Integer-args optional           // integer arguments supplied as huntargs.
    3  typed_args       Typed-Arguments optional                 // Paired strings of named arguments.
    4  native_oc2       OC2-Data optional                        // OC2 Language types supplied as huntargs.
    5  stix             sco:STIX-Cybersecurity-Observables optional  // STIX arguments supplied as huntargs.
    6  stix_extensions  oca:STIX-Extensions optional             // STIX arguments supplied as huntargs. add a custom stix for oca-asset and event
    7  timeranges       Timeranges optional                      // Timeranges used in the execution of a hunt.
    8  datasources      Datasource-Array optional                // Available data sources for hunting. These may be a host monitor, an EDR, a SIEM, a firewall, etc.

OC2-Data = ArrayOf(Language-Spec-Types){1..*}  // OC2-Data is an array of one or more types defined in the OpenC2 language spec

Language-Spec-Types = Record                           // for each track there's a file with the audio and a metadata record
    1  artifact           ls:Artifact optional         // An array of bytes representing a file-like object or a link to that object.
    2  device             ls:Device optional           // The properties of a hardware device.
    3  domain_name        ls:Domain-Name optional      // A network domain name.
    4  email-address      ls:Email-Addr optional       // A single email address
    5  file               ls:File optional             // Properties of a file.
    6  hashes             ls:Hashes optional           // Not used as an entity; use inside File or other attribute of another type. May be used as a query value.
    7  hostname           ls:Hostname optional         // Value must be a hostname as defined in [RFC1034], Section 3.1
    8  idn_domain_name    ls:IDN-Domain-Name optional  // An internationalized domain name.
    9  idn_email_address  ls:IDN-Email-Addr optional   // A single internationalized email address.
   10  ipv4_address       ls:IPv4-Addr optional        // IPv4 address as defined in [RFC0791].
   11  ipv6_address       ls:IPv6-Addr optional        // IPv6 address as defined in [RFC8200].
   12  ipv4_network       ls:IPv4-Net optional         // IPv4 network targeted by hunt activity.
   13  ipv6_network       ls:IPv6-Net optional         // IPv6 network targeted by hunt activity.
   14  ipv4_connection    ls:IPv4-Connection optional  // A 5-tuple of source and destination IPv4 address ranges, source and destination ports, and protocol.
   15  ipv6_connection    ls:IPv6-Connection optional  // A 5-tuple of source and destination IPv6 address ranges, source and destination ports, and protocol.
   16  iri                ls:IRI optional              // An internationalized resource identifier (IRI).
   17  mac_address        ls:MAC-Addr optional         // A Media Access Control (MAC) address - EUI-48 or EUI-64 as defined in [EUI].
   18  port               ls:Port optional             // Transport Protocol Port Number, [RFC6335]
   19  process            ls:Process optional          // Common properties of an instance of a computer program as executed on an operating system.
   20  uri                ls:URI optional              // A uniform resource identifier (URI).


AP-Specifiers = Map{1..*}  // TH actuator specifiers (may be empty).

Huntflow-Specifiers = Map                           // TH Huntflow specifiers.
    1  path           String optional               // Return huntflows at and below this filesystem location (absolute path).
    2  tags           Tags optional                 // Return huntflows with these keywords.
    3  arg_types      Specified-Arg-Types optional  // Return huntflows that take these argument types.
    4  arg_names      Specified-Arg-Names optional  // Return huntflows that take these argument types.
    5  format_types   Return-Type optional          // Return huntflows that produce these output types.
    6  return_format  Huntflow-Sections optional    // For each huntflow returned, include these data items.

Specified-Arg-Types = ArrayOf(Arg-Type)  // Return huntflows that take these argument types.

Specified-Arg-Names = ArrayOf(Arg-Name)  // Return huntflows that take arguments with these names.

AP-Results = Map{1..*}                                   // TH results defined in this profile.
    1  huntflow_info  Ap-results$Huntflow-info optional  // Structured data returned by Query: Huntflows.
    2  datasources    Datasource-Array optional          // Datasource names and info returned by Query Datasources.
    3  inv_returns    Inv-Returns optional               // STIX SCO object returns

Inv-Returns = ArrayOf(Inv-Return){1..*}  // Array of returns from threat hunt investigations.

Inv-Return = Record                                             // Data returned by a threat hunt, in various formatted types.
    1  string_returns  Inv-return$String-returns optional       // String return from an investigation
    2  stix_sco        sco:STIX-Cybersecurity-Observables optional  // STIX SCO object returns

Timeranges = ArrayOf(Timerange)  // a timerange used in the execution of a hunt.

Timerange = Choice                                 // Identification of process to be targeted by Threat Hunting activity.
    1  timerange_absolute  Timerange-Abs optional  // Absolute timerange, defined by a start and end time in ISO 8601 format.
    2  timerange_relative  Timerange-Rel optional  // Relative timerange, example '3, Days' for last 3 days.

Time-Unit = Enumerated  // Time Unit Keywords.
    1  Days     //
    2  Hours    //
    3  Minutes  //
    4  Seconds  //

Timerange-Abs = Record{2..*}       // Absolute timerange, defined by a start and end time in ISO 8601 format.
    1  hunt_start_time  sco:timestamp  // Start time, as a STIX time string.
    2  hunt_stop_time   sco:timestamp  // Stop time, as a STIX time string.

Timerange-Rel = Record{2..*} // Relative timerange, example '3, Days' for last 3 days.
    1  number     Integer    // Number of specified Time Units used in Relative Timerange.
    2  time_unit  Time-Unit  // Time Unit Keywords.

Return-Type = Record{2..*} // Variable names and types expected as returns when using a Huntflow.
    1  var_name  Arg-Name  // Variable name to be returned by use of Huntflow.
    2  var_type  Arg-Type  // Type of data to be returned by use of Huntflow.

Datasource = Record{1..*}      // Datasource names and tags required for use with a particular Huntflow.
    1  ds_name  String         // Name of a Datasource used by a Huntflow in Kestrel runtime.
    2  ds_tags  Tags optional  // Tags applied to a Datasource for search or filter purposes.

Huntflow-Sections = ArrayOf(Huntflow-Section)  // For each huntflow returned, include these data items.

Huntflow-Section = Enumerated  // Data format to be returned by Query Huntflows. If none specified, return all.
    1  path              // Specifies the return should include the path to each Huntflow specified by the query conditions.
    2  uniqueId          // Specifies the return should include the ID of each Huntflow specified by the query conditions.
    3  version           // Specifies the return should include the ID of each Huntflow specified by the query conditions.
    4  args_required     // Specifies the returned data should include the required arguments for the available Huntflows.
    5  expected_returns  // Specifies the returned data should include the expected returns for the available Huntflows.
    6  script            // Specifies the returned data should include the full text of the Huntflow for each available Huntflow.

Huntflow-Info = Record{1..*}                       // Structured data returned by Query: Huntflows with specifiers for specific info.
    1  path              String optional           // Path used to identify a Huntflow in place of a name.
    2  uniqueId          Integer optional          // Unique ID associated with a specified Huntflow.
    3  version           String optional           // Unique ID associated with a specified Huntflow.
    4  args_required     Typed-Arguments optional  // List of arguments used in the specified Huntflow.
    5  expected_returns  Typed-Arguments optional  // Data returned by the specified Huntflows.
    6  script            String optional           // Text of Hunt logic implemented by specified Huntflow.

Datasource-Array = ArrayOf(Datasource)  // An Array of Datasources, with multiple uses in Threathunting

Tags = ArrayOf(String)  // Tags applied for search or filter purposes.

Typed-Arguments = MapOf(Arg-Name, Arg-Type)  // Argument names and types tied to a specific Huntflow.

Arg-Type = String  // Argument types used by a Huntflow. Follow STIX naming conventions, with lowercase characters and hyphens replacing spaces. Common types include process, file, and network-traffic.

Arg-Name = String  // Argument names used by a Huntflow. Follow C variable naming conventions. Examples include name, src_port, and x_unique_id.

